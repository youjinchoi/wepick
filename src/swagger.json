{
  "swagger": "2.0",
  "info": {
    "description": "Wepick",
    "version": "1.0.0",
    "title": "Swagger Wepick",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "apiteam@swagger.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "",
  "basePath": "/",
  "tags": [
    {
      "name": "question",
      "description": "Everything about your Question"
    }
  ],
  "schemes": [
    "http", "https"
  ],
  "paths": {
    "/questions": {
      "post": {
        "tags": [
          "question"
        ],
        "summary": "Add a new question",
        "description": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Question object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Question"
            }
          },
          {
	        "in": "header",
	        "name": "Access-Key",
	        "description": "user accessKey",
	        "required": true
	      }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      },
      "get": {
        "tags": [
          "question"
        ],
        "summary": "Get question list",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "type",
            "description": "로그인시 내가 등록/답변하지 않은 질문 조회, 'my' 일 경우 내가 등록한 질문 조회, 비로그인이거나 'guest'일 경우 모든 질문 조회",
            "required": false
          },
          {
            "in": "query",
            "name": "count",
            "description": "한번에 조회할 질문 개수. default 20",
            "required": false
          },
          {
            "in": "query",
            "name": "next",
            "description": "더보기 시 기준이 되는 키. 값이 없을 경우 최신 질문 목록 반환.",
            "required": false
          },
          {
            "in": "header",
            "name": "Access-Key",
            "description": "값이 없을 경우 비로그인으로 모든 질문 조회",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          },
          "404": {
            "description": "not found"
          }
        }
      }
    },
    "/questions/{questionSeq}": {
      "get": {
    	  "tags": [
            "question"
    	  ],
          "summary": "Get question by questionSeq",
          "description": "",
          "produces": [
            "application/json"
          ],
          "parameters": [
              {
                "in": "path",
                "name": "questionSeq",
                "description": "questionSeq",
                "required": true
              },
              {
                "in": "header",
                "name": "Access-Key",
                "description": "user accessKey",
                "required": true
              }
            ],
            "responses": {
              "200": {
                "description": "ok"
              },
              "404": {
                "description": "not found"
              }
            }
      },
      "delete": {
        "tags": [
          "question"
        ],
        "summary": "Delete question by questionSeq",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "questionSeq",
            "description": "questionSeq",
            "required": true
          },
          {
            "in": "header",
            "name": "Access-Key",
            "description": "questioner accessKey",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          },
          "404": {
            "description": "not found"
          }
        }
      }
    },
    "/questions/close/{questionSeq}": {
      "patch": {
        "tags": [
          "question"
        ],
        "summary": "Close question by questionSeq",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "questionSeq",
            "description": "questionSeq",
            "required": true
          },
          {
            "in": "header",
            "name": "Access-Key",
            "description": "questioner accessKey",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          },
          "404": {
            "description": "not found"
          }
        }
      }
    },
    "/questions/skip/{questionSeq}": {
        "post": {
          "tags": [
            "question"
          ],
          "summary": "Skip question by questionSeq",
          "description": "",
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "path",
              "name": "questionSeq",
              "description": "questionSeq",
              "required": true
            },
            {
              "in": "header",
              "name": "Access-Key",
              "description": "questioner accessKey",
              "required": true
            }
          ],
          "responses": {
            "200": {
              "description": "ok"
            },
            "404": {
              "description": "not found"
            }
          }
        }
      },
    "/answers": {
      "post": {
        "tags": [
          "answer"
        ],
        "summary": "Add a new answer",
        "description": "",
        "operationId": "addAnswer",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Answer object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Answer"
            }
          },
          {
            "in": "header",
            "name": "Access-Key",
            "description": "user accessKey",
            "required": true
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/members": {
        "post": {
          "tags": [
            "member"
          ],
          "summary": "Add a new member",
          "description": "",
          "operationId": "addMember",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "member",
              "description": "Member email, password",
              "required": true,
              "schema": {
                "$ref": "#/definitions/Member"
              }
            }
          ],
          "responses": {}
        },
        "delete": {
            "tags": [
              "member"
            ],
            "summary": "일반 회원 탈퇴(회원정보 및 등록한 질문 삭제)",
            "description": "",
            "consumes": [
              "application/json"
            ],
            "produces": [
              "application/json"
            ],
            "parameters": [
          	  {
        	        "in": "header",
        	        "name": "Access-Key",
        	        "description": "accessKey",
        	        "required": true
        	      }
            ],
            "responses": {}
          }
      },
    "/members/@Self": {
          "get": {
              "tags": [
                "member"
              ],
              "summary": "Get a user by accessKey",
              "description": "",
              "operationId": "getMember",
              "consumes": [
                "application/json"
              ],
              "produces": [
                "application/json"
              ],
              "parameters": [
                {
                  "in": "header",
                  "name": "Access-Key",
                  "description": "Member accessKey",
                  "required": true,
                  "schema": {
                    "$ref": "#/definitions/Member"
                  }
                }
              ],
              "responses": {
                "401": {
                  "description": "Access-Key in header is required."
                },
                "404": {
                    "description": "user does not exist."
                  }
              }
          }
      },
      "/guests": {
          "post": {
            "tags": [
              "guest"
            ],
            "summary": "게스트 회원 등록. accessKey 생성 후 리턴",
            "description": "",
            "consumes": [
              "application/json"
            ],
            "produces": [
              "application/json"
            ],
            "parameters": [],
            "responses": {}
          }
      },
    "/login": {
        "post": {
          "tags": [
            "login"
          ],
          "summary": "login with email and password",
          "description": "",
          "operationId": "login",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "login",
              "description": "email and password",
              "required": true,
              "schema": {
                "$ref": "#/definitions/Member"
              }
            }
          ],
          "responses": {
            "404": {
              "description": "user does not exist."
            }
          }
        }
      },
      "/logout": {
          "post": {
            "tags": [
              "logout"
            ],
            "summary": "logout",
            "description": "",
            "operationId": "logout",
            "consumes": [
              "application/json"
            ],
            "produces": [
              "application/json"
            ],
            "parameters": [
              {
                "in": "header",
                "name": "Access-Key",
                "description": "accessKey",
                "required": true
              }
            ],
            "responses": {
              "404": {
                "description": "user does not exist."
              }
            }
          }
        },  
    "/verifications": {
      "post": {
        "tags": [
          "verification"
        ],
        "summary": "send verification email",
        "description": "",
        "operationId": "verification",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "email",
            "description": "email address",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Email"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "user does not exist."
          }
        }
      }
    },
    "/verifications/{verificationSeq}/{verificationCode}": {
      "get": {
        "tags": [
          "verification"
        ],
        "summary": "",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "verificationSeq",
            "description": "verificationSeq",
            "required": true
          },
          {
            "in": "path",
            "name": "verificationCode",
            "description": "verificationCode",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "ok"
          },
          "404": {
            "description": "not found"
          }
        }
      }
    },
    "/pushes/{userSeq}": {
      "post": {
        "tags": [
          "push"
        ],
        "summary": "Send push to user",
        "description": "",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userSeq",
            "description": "userSeq",
            "required": true
          }
        ],
        "responses": {
        }
      }
    },
    "/pushes/tokens": {
        "put": {
          "tags": [
            "push"
          ],
          "summary": "Save user push token.",
          "description": "",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "token",
              "description": "push token",
              "required": true,
              "schema": {
                "$ref": "#/definitions/Token"
              }
            },
	        {
		      "in": "header",
		      "name": "Access-Key",
		      "description": "accessKey",
		      "required": true
		    }
          ],
          "responses": {
          }
        }
      }
  },
  "definitions": {
    "Question": {
      "type": "object",
      "required": [
        "contents",
        "options"
      ],
      "properties": {
        "contents": {
          "type": "string",
          "example": "where to work"
        },
        "options": {
          "type": "array",
          "example": ["facebook","amazon","netflix","google"]
        },
        "maxAnswerCount": {
          "type": "number",
          "example": 50
        }
      }
    },
    "Answer": {
      "type": "object",
      "required": [
        "question",
        "selection"
      ],
      "properties": {
        "question": {
          "type": "number",
          "example": 1
        },
        "selection": {
          "type": "number",
          "example": 2
        }
      }
    },
    "Member": {
        "type": "object",
        "required": [
            "email",
            "password"
          ],
        "properties": {
          "email": {
            "type": "string",
            "example": "admin@wepick.com"
          },
          "password": {
            "type": "string",
            "example": "asdf!@#"
          }
        }
      },
    "Email": {
      "type": "object",
      "required": [
          "email"
        ],
      "properties": {
        "email": {
          "type": "string",
          "example": "yj1361@naver.com"
        }
      }
    },
    "Token": {
        "type": "object",
        "required": [
            "token"
          ],
        "properties": {
          "token": {
            "type": "string",
            "example": "wertyujhgfdxcvbn"
          }
        }
      },
    "ApiResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        },
        "result": {
          "type": "object"
        }
      }
    }
  }
}